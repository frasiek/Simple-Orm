<?php

use SO\Db;
use SO\Exception;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-01-16 at 10:24:26.
 */
class DbTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Db
     */
    protected $object;

    CONST HOST = 'localhost';
    CONST DATABASE = 'sodb';
    CONST LOGIN = 'root';
    CONST PASSWORD = 'root';

    protected function connect() {
        if (!($this->object instanceof Db) || !($this->object->connected())) {
            Db::setConnection(self::HOST, self::LOGIN, self::PASSWORD, self::DATABASE);
            $this->object = Db::getInstance();
        }
        $this->object->query("DROP TABLE test_table");
        $this->object->query("
                CREATE TABLE `test_table` (
                    `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
                    `nazwa` VARCHAR(50) NOT NULL,
                    `date` DATE NULL DEFAULT NULL,
                    `quantity` INT(11) NULL DEFAULT '0',
                    PRIMARY KEY (`id`),
                    UNIQUE INDEX `nazwa` (`nazwa`)
                )
                COLLATE='utf8_general_ci'
                ENGINE=InnoDB");
        $this->object->query("INSERT INTO test_table values (1, 'test', '2015-01-16', 1)");
    }

    public function testModel() {
        try {
            $this->connect();
            $this->assertTrue($this->object->connected());
        } catch (Exception $ex) {
            $this->assertTrue(false);
        }
    }
    
    public function testFindByPk($pk){
        $where = '';
        if(is_array($pk)){
            $where = $this->arrayToWhere($pk);
        } else {
            if(count($this->pk)>0){
                throw new Exception("Specyfy all primary keys");
            }
            $where = "`{$this->pk}` = ".$this->quote($pk);
        }
        $raw = $this->db->getOne("SELECT * from `{$this->tableName}` WHERE $where");
        if(!$raw){
            return null;
        }
        $this->objectToAttributes($raw);
        return $this;
    }
    
    /**
     * Zwraca jeden obiek wg zadanych atrybutow 
     * @param array $attrs
     * @return \SO\Model
     */
    public function testFindByAttributes(array $attrs){
        $where = $this->arrayToWhere($attrs);
        $raw = $this->db->getOne("SELECT * from `{$this->tableName}` WHERE $where");
        if(!$raw){
            return null;
        }
        $this->objectToAttributes($raw);
        return $this;
    }
    
    /**
     * Zwraca obiek wg warunku
     * @param type $where
     * @return \SO\Model
     */
    public function testFindByCondition($where){
        $raw = $this->db->getOne("SELECT * from `{$this->tableName}` WHERE $where");
        if(!$raw){
            return null;
        }
        $this->objectToAttributes($raw);
        return $this;
    }
    
    /**
     * @covers \SO\Model::save
     */ function testFindAllByAttributes(array $attrs){
        
    }
    
    /**
     * @covers \SO\Model::save
     */
    public function testFindAllByCondition($where){

    }
    
    /**
     * @covers \SO\Model::save
     */
    public function testSave(){
        
    }
}
