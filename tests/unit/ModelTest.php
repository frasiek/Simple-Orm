<?php

require_once dirname(__FILE__) . DIRECTORY_SEPARATOR . ".." . DIRECTORY_SEPARATOR . "SampleModel.php";

use SO\Db;
use SO\Exception;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-01-16 at 10:24:26.
 */
class DbTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Db
     */
    protected $object;

    CONST HOST = 'localhost';
    CONST DATABASE = 'sodb';
    CONST LOGIN = 'root';
    CONST PASSWORD = 'root';

    protected function connect() {
        if (!($this->object instanceof Db) || !($this->object->connected())) {
            Db::setConnection(self::HOST, self::LOGIN, self::PASSWORD, self::DATABASE);
            $this->object = Db::getInstance();
        }
        $this->object->query("DROP TABLE test_table");
        $this->object->query("
                CREATE TABLE `test_table` (
                    `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
                    `nazwa` VARCHAR(50) NOT NULL,
                    `date` DATE NULL DEFAULT NULL,
                    `quantity` INT(11) NULL DEFAULT '0',
                    PRIMARY KEY (`id`),
                    UNIQUE INDEX `nazwa` (`nazwa`)
                )
                COLLATE='utf8_general_ci'
                ENGINE=InnoDB");
        $this->object->query("INSERT INTO test_table values (1, 'test', '2015-01-16', 1)");
        $this->object->query("INSERT INTO test_table values (2, 'test2', '2015-01-16', 1)");
    }

    public function testModel() {
        try {
            $this->connect();
            $this->assertTrue($this->object->connected());
            $this->assertInstanceOf("SampleModel", SampleModel::model());
        } catch (Exception $ex) {
            $this->assertTrue(false);
        }
    }

    /**
     * @covers \SO\Model::findByPk
     */
    public function testFindByPk() {
        $this->connect();
        $model = SampleModel::model()->findByPk(1);
        $this->assertInstanceOf("SampleModel", $model);
        $this->assertTrue($model->id == 1);
    }

    /**
     * @covers \SO\Model::findByAttributes
     */
    public function testFindByAttributes() {
        $this->connect();
        $model = SampleModel::model()->findByAttributes(array("id" => 1));
        $this->assertInstanceOf("SampleModel", $model);
        $this->assertTrue($model->id == 1);
    }

    /**
     * @covers \SO\Model::findByCondition
     */
    public function testFindByCondition() {
        $this->connect();
        $model = SampleModel::model()->findByCondition("id = 1");
        $this->assertInstanceOf("SampleModel", $model);
        $this->assertTrue($model->id == 1);
    }

    /**
     * @covers \SO\Model::findAllByAttributes
     */ 
    public function testFindAllByAttributes() {
        $this->connect();

        $models = SampleModel::model()->findAllByAttributes(array("quantity" => 1));
        $this->assertInternalType("array", $models);
        $i = 1;
        foreach($models as $model){
            $this->assertInstanceOf("SampleModel", $model);
            $this->assertTrue($model->id == $i++);
        }
    }

    /**
     * @covers \SO\Model::findAllByCondition
     */
    public function testFindAllByCondition() {
        $models = SampleModel::model()->findAllByCondition("quantity = 1");
        $this->assertInternalType("array", $models);
        $i = 1;
        foreach($models as $model){
            $this->assertInstanceOf("SampleModel", $model);
            $this->assertTrue($model->id == $i++);
        }
    }

    /**
     * @covers \SO\Model::save
     */
    public function testSave() {
        $this->connect();
        $model = new SampleModel();
        $model->nazwa = "nowo dodany";
        $model->date = "2014-01-01";
        $model->quantity = 666;
        $this->assertTrue($model->save());
        $this->assertTrue($model->quantity == 666);
        $model->quantity = 777;
        $model->save();
        $this->assertTrue($model->quantity == 777);
    }

}
